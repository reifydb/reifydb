# Copyright (c) reifydb.com 2025
# This file is licensed under the AGPL-3.0-or-later, see license.md file

# Test update followed by delete in same transaction
# Should result in single Delete with original pre value

# Setup initial data
insert 1 key_a=original_a
insert 1 key_b=original_b
insert 1 key_c=original_c
commit
---
ok

# Update then delete in same transaction
update 2 key_a=temporary_value
delete 2 key_a
commit
---
ok

# Single Delete with original value
cdc_get 2 1
---
Change { seq: 1, change: Delete { key: "key_a", pre: "original_a" } }

cdc_count 2
---
count: 1

# Multiple updates before delete
update 3 key_b=temp1
update 3 key_b=temp2
update 3 key_b=temp3
delete 3 key_b
commit
---
ok

# Single Delete with original pre value
cdc_get 3 1
---
Change { seq: 1, change: Delete { key: "key_b", pre: "original_b" } }

cdc_count 3
---
count: 1

# Mixed operations with update+delete
update 4 key_c=modified_c
insert 4 key_d=new_d
delete 4 key_c
update 4 key_d=modified_d
commit
---
ok

# Delete for key_c, Insert for key_d
cdc_get 4 1
---
Change { seq: 1, change: Delete { key: "key_c", pre: "original_c" } }

cdc_get 4 2
---
Change { seq: 2, change: Insert { key: "key_d", post: "modified_d" } }

cdc_count 4
---
count: 2

# Edge case: update to different values then delete
insert 5 key_e=start_e
commit
---
ok

update 6 key_e=a
update 6 key_e=b
update 6 key_e=c
update 6 key_e=d
update 6 key_e=e
delete 6 key_e
commit
---
ok

# Should show Delete with original value from storage
cdc_get 6 1
---
Change { seq: 1, change: Delete { key: "key_e", pre: "start_e" } }

cdc_count 6
---
count: 1
