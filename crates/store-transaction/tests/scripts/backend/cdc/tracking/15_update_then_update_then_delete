# Copyright (c) reifydb.com 2025
# This file is licensed under the AGPL-3.0-or-later, see license.md file

# Test multiple updates followed by delete in same transaction
# Should simplify to single Delete with pre-update value

# Setup initial state
insert 1 key_x=x_original
insert 1 key_y=y_original
insert 1 key_z=z_original
commit
---
ok

# Two updates then delete
update 2 key_x=x_temp1
update 2 key_x=x_temp2
delete 2 key_x
commit
---
ok

# Single Delete with original value
cdc_get 2 1
---
Change { seq: 1, change: Delete { key: "key_x", pre: "x_original" } }

cdc_count 2
---
count: 1

# Many updates then delete
update 3 key_y=y1
update 3 key_y=y2
update 3 key_y=y3
update 3 key_y=y4
update 3 key_y=y5
update 3 key_y=y6
delete 3 key_y
commit
---
ok

# Single Delete with original value
cdc_get 3 1
---
Change { seq: 1, change: Delete { key: "key_y", pre: "y_original" } }

cdc_count 3
---
count: 1

# Interleaved updates and deletes on different keys
update 4 key_z=z1
insert 4 key_new=new1
update 4 key_z=z2
update 4 key_new=new2
update 4 key_z=z3
delete 4 key_z
update 4 key_new=new3
commit
---
ok

# Delete for key_z, Insert for key_new
cdc_get 4 1
---
Change { seq: 1, change: Delete { key: "key_z", pre: "z_original" } }

cdc_get 4 2
---
Change { seq: 2, change: Insert { key: "key_new", post: "new3" } }

cdc_count 4
---
count: 2

# Pattern: update back and forth then delete
insert 5 oscillate=base
commit
---
ok

update 6 oscillate=a
update 6 oscillate=base
update 6 oscillate=a
update 6 oscillate=base
update 6 oscillate=a
delete 6 oscillate
commit
---
ok

# Delete with original value regardless of intermediate changes
cdc_get 6 1
---
Change { seq: 1, change: Delete { key: "oscillate", pre: "base" } }

cdc_count 6
---
count: 1
