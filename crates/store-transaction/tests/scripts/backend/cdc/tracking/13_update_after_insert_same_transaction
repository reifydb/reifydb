# Copyright (c) reifydb.com 2025
# This file is licensed under the AGPL-3.0-or-later, see license.md file

# Test update after insert in the same transaction
# Should result in single Insert with final value

# Simple insert then update
insert 1 key_a=initial_a
update 1 key_a=final_a
commit
---
ok

# Single Insert with final value
cdc_get 1 1
---
Change { seq: 1, change: Insert { key: "key_a", post: "final_a" } }

cdc_count 1
---
count: 1

# Insert, update multiple times
insert 2 key_b=b1
update 2 key_b=b2
update 2 key_b=b3
update 2 key_b=b4
commit
---
ok

# Single Insert with last value
cdc_get 2 1
---
Change { seq: 1, change: Insert { key: "key_b", post: "b4" } }

cdc_count 2
---
count: 1

# Multiple keys with insert+update pattern
insert 3 k1=v1
update 3 k1=v1_new
insert 3 k2=v2
update 3 k2=v2_new
insert 3 k3=v3
commit
---
ok

# k1 and k2 have final values, k3 unchanged
cdc_get 3 1
---
Change { seq: 1, change: Insert { key: "k1", post: "v1_new" } }

cdc_get 3 2
---
Change { seq: 2, change: Insert { key: "k2", post: "v2_new" } }

cdc_get 3 3
---
Change { seq: 3, change: Insert { key: "k3", post: "v3" } }

cdc_count 3
---
count: 3

# Complex pattern with interleaved operations
insert 4 new1=n1
insert 4 new2=n2
update 4 new1=n1_mod
insert 4 new3=n3
update 4 new2=n2_mod
update 4 new3=n3_mod
commit
---
ok

# All appear as Inserts with final values
cdc_get 4 1
---
Change { seq: 1, change: Insert { key: "new1", post: "n1_mod" } }

cdc_get 4 2
---
Change { seq: 2, change: Insert { key: "new2", post: "n2_mod" } }

cdc_get 4 3
---
Change { seq: 3, change: Insert { key: "new3", post: "n3_mod" } }

cdc_count 4
---
count: 3
