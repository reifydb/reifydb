# Copyright (c) reifydb.com 2025
# This file is licensed under the AGPL-3.0-or-later, see license.md file

# Test multiple updates to the same key in one transaction
# Should result in a single Update CDC change with initial->final values

# Setup initial data
insert 1 key_a=initial_a
insert 1 key_b=initial_b
commit
---
ok

# Multiple updates to same key in one transaction
update 2 key_a=update1
update 2 key_a=update2
update 2 key_a=update3
update 2 key_a=final_value
commit
---
ok

# Should see single Update from initial to final
cdc_get 2 1
---
Change { seq: 1, change: Update { key: "key_a", pre: "initial_a", post: "final_value" } }

cdc_get 2 2
---
None

cdc_count 2
---
count: 1

# Updates to multiple keys, each updated multiple times
update 3 key_a=a_v1
update 3 key_b=b_v1
update 3 key_a=a_v2
update 3 key_b=b_v2
update 3 key_a=a_final
update 3 key_b=b_final
commit
---
ok

# Each key should have single Update change
cdc_get 3 1
---
Change { seq: 1, change: Update { key: "key_a", pre: "final_value", post: "a_final" } }

cdc_get 3 2
---
Change { seq: 2, change: Update { key: "key_b", pre: "initial_b", post: "b_final" } }

cdc_count 3
---
count: 2

# Edge case: update to same value multiple times
insert 4 key_c=value_c
commit
---
ok

update 5 key_c=new_value
update 5 key_c=new_value
update 5 key_c=new_value
commit
---
ok

# Still single Update change
cdc_get 5 1
---
Change { seq: 1, change: Update { key: "key_c", pre: "value_c", post: "new_value" } }

cdc_count 5
---
count: 1
