# Copyright (c) reifydb.com 2025
# This file is licensed under the AGPL-3.0-or-later, see license.md file

# Simulate CDC event processing with set_as_of_inclusive
# This tests the actual use case for FlowConsumer

# Initial state
import users=10 products=5
---
ok

# Version 2: User activity
t1: begin
t1: set users=11
t1: commit
---
ok

# Version 3: Product update
t2: begin
t2: set products=6
t2: commit
---
ok

# Version 4: Both change
t3: begin
t3: set users=12 products=7
t3: commit
---
ok

# Simulate CDC consumer processing events
# Each event sees the state at its commit version
t4: begin

# Process CDC event from version 1
t4: set_as_of_inclusive 1
t4: get users products
---
t4: "users" => "10"
t4: "products" => "5"

# Calculate derived value at version 1
t4: set ratio_v1=2

# Process CDC event from version 2
t4: set_as_of_inclusive 2
t4: get users products
---
t4: "users" => "11"
t4: "products" => "5"

# Calculate derived value at version 2
t4: set ratio_v2=2.2

# Process CDC event from version 3
t4: set_as_of_inclusive 3
t4: get users products
---
t4: "users" => "11"
t4: "products" => "6"

# Calculate derived value at version 3
t4: set ratio_v3=1.83

# Process CDC event from version 4
t4: set_as_of_inclusive 4
t4: get users products
---
t4: "users" => "12"
t4: "products" => "7"

# Calculate derived value at version 4
t4: set ratio_v4=1.71

# Commit all derived calculations
t4: commit
---
ok

# Verify all calculations were stored
t5: begin
t5: get ratio_v1 ratio_v2 ratio_v3 ratio_v4
---
t5: "ratio_v1" => "2"
t5: "ratio_v2" => "2.2"
t5: "ratio_v3" => "1.83"
t5: "ratio_v4" => "1.71"
