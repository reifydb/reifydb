# Copyright (c) reifydb.com 2025
# This file is licensed under the AGPL-3.0-or-later, see license.md file

# Test sequence number overflow with u16::MAX (65535) events
# This tests what happens when we try to exceed the u16 boundary

# First, let's add a command to bulk insert the maximum number of events (65535 = sequences 1 to 65535)
bulk_insert 1000 65535
---
ok

# The bulk insert should have inserted 65535 events
cdc_count 1000
---
count: 65535

# Verify we can retrieve the first event (sequence 1)
cdc_get 1000 1
---
CdcEvent { version: 1000, seq: 1, ts: 1000, change: Insert { key: "bulk_0", after: "0" } }

# Verify we can retrieve a middle event
cdc_get 1000 32768
---
CdcEvent { version: 1000, seq: 32768, ts: 1000, change: Insert { key: "bulk_32767", after: "32767" } }

# Verify we can retrieve the last valid event (sequence 65535)
cdc_get 1000 65535
---
CdcEvent { version: 1000, seq: 65535, ts: 1000, change: Insert { key: "bulk_65534", after: "65534" } }

# Now test overflow behavior - try to insert 65536 events in one transaction
# This should return an error since we've exhausted the sequence space
!bulk_insert 2000 65536
---
> Error STORAGE_004
>   Transaction sequence number exhausted (exceeds u16 maximum)
> 
> HELP
>   This transaction contains more than 65,535 operations.
> Consider splitting the transaction into smaller batches.
> 
> NOTES
>   • Maximum operations per transaction: 65,535
>   • Large transactions can impact performance

# Verify the original sequence 0 is still intact (not overwritten)
cdc_get 1000 1
---
CdcEvent { version: 1000, seq: 1, ts: 1000, change: Insert { key: "bulk_0", after: "0" } }

# The count should still be 65535 (max reached)
cdc_count 1000
---
count: 65535
